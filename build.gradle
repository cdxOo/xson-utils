plugins {
    id 'base'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71' apply false
    id 'com.github.johnrengelman.shadow' version '5.0.0' apply false
}

ext.versions = [
    'kotlin': '1.3.71',
    'gradle': '6.3',
]

ext.deps = [
    'kotlin': [
        // kotlin stdlib to get kotlin to do anything
        'stdlib': "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    ],
    // cli application toolkit
    'clikt': 'com.github.ajalt:clikt:2.6.0'
]

allprojects {
    repositories {
        gradlePluginPortal()
        jcenter()
        maven { url "https://jitpack.io" }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = '1.8'
        }
    }
}

tasks.withType(Wrapper.class).configureEach {
  gradleVersion = versions.gradle
  distributionType = Wrapper.DistributionType.BIN
}

tasks.register('makeDist', DefaultTask.class) {
    group = "Distribution"
    description = "creates distribution files"
    
    subprojects.each { subproject ->
        // FIXME: this semantic is really wierd ... dependsOn()
        // references makeDistTask not subproject
        // the readability isnt good here
        dependsOn "${subproject.name}:shadowJarExecutable"
    }

    // FIXME: this doesnt work somehow
    // see https://docs.gradle.org/current/userguide/more_about_tasks.html#sec:adding_dependencies_to_tasks
    // in example 16
    /*dependsOn {
        subprojects { it -> 
            // FIXME: probably need find the actual task here
            "${subproject.name}:shadowJarExecutable"
        }
    }*/
   
    // FIXME; this is how ktlint tries to do that
    // but it diesnt seem to work either
    /* subprojects { subproject ->
        //println "foo"
        //println subproject.tasks
        subproject.tasks.startsWith("shadowJarExecutable") { -> task
            //println ":${subproject.name}:${task.name}"
            //makeDistTask.dependsOn ":${subproject.name}:${task.name}"
        }
    }*/

    doLast {
        mkdir "$buildDir/dist"
        subprojects.each { subproject ->
            copy {
                from "${subproject.buildDir}/run/"
                into "$buildDir/dist/"
            }
        }
        fileTree("$buildDir/dist").visit { FileVisitDetails details ->
            ant.checksum(
                file: details.file,
                fileext: '.sha512',
                algorithm: "SHA-512",
                pattern: "{0} {1}"
            )
        }
    }
}
